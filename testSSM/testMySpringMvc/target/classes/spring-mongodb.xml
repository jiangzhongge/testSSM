<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/data/mongo  
    http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
    http://www.springframework.org/schema/data/repository
    http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 加载mongodb的属性配置文件 -->
    <context:property-placeholder location="classpath:database-config.properties" />
    
    <mongo:mongo-client id="mongo" replica-set="${mongo.hostport}" >
    	<mongo:client-options
    		connections-per-host="${mongo.connectionsPerHost}"
             threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
             connect-timeout="${mongo.connectTimeout}" 
             max-wait-time="${mongo.maxWaitTime}"
             socket-keep-alive="${mongo.socketKeepAlive}"
             socket-timeout="${mongo.socketTimeout}"
            />
	    <!-- connections-per-host="${mongo.connectionsPerHost}"
	    min-connections-per-host="${mongo.minConnectionsPerHost}"
	    threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
	    connect-timeout="${mongo.connectTimeout}"
	    max-wait-time="${mongo.maxWaitTime}"
	    socket-keep-alive="${mongo.socketKeepAlive}"
	    socket-timeout="${mongo.socketTimeout}"
	    description="${mongo.description}"
	    max-connection-idle-time="${mongo.maxConnectionIdleTime}"
	    max-connection-life-time="${mongo.maxConnectionLifeTime}"
	    heartbeat-socket-timeout="${mongo.heartbeatSocketTimeout}"
	    heartbeat-connect-timeout="${mongo.heartbeatConnectTimeout}"
	    min-heartbeat-frequency="${mongo.minHeartbeatFrequency}"
	    heartbeat-frequency="${mongo.heartbeatFrequency}"	 -->
    </mongo:mongo-client>
    <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
    <!-- <mongo:mongo id="mongo" replica-set="${mongo.hostport}">
        一些连接属性的设置
        <mongo:options
             connections-per-host="${mongo.connectionsPerHost}"
             threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
             connect-timeout="${mongo.connectTimeout}" 
             max-wait-time="${mongo.maxWaitTime}"
             auto-connect-retry="${mongo.autoConnectRetry}"
             socket-keep-alive="${mongo.socketKeepAlive}"
             socket-timeout="${mongo.socketTimeout}"
             slave-ok="${mongo.slaveOk}"
             write-number="1"
             write-timeout="0"
             write-fsync="true"/>
         connect-timeout  #连接超时时间
         max-wait-time    #等待时间
         socket-timeout   #Socket超时时间
    </mongo:mongo> -->

    <!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
    <mongo:db-factory dbname="${mongo.dbName}" mongo-ref="mongo"/>

    <bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">
        <constructor-arg name="username" value="${mongo.username}" />
        <constructor-arg name="password" value="${mongo.password}" />
    </bean>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo" />
        <constructor-arg name="databaseName" value="${mongo.dbName}" />
        <constructor-arg ref="userCredentials" />
    </bean>
    
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
    <!-- <mongo:repositories base-package="com.jiang.seven.entity.mongodb" /> -->

    <!--激活注解-->
    <!-- <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/> -->
    
</beans>
