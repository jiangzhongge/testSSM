<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"  
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	 http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:database-config.properties" />  
  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${server.redis.maxTotal}" />  
        <property name="minIdle" value="${server.redis.minIdle}" />  
        <property name="maxWaitMillis" value="${server.redis.maxWaitTime}" />  
        <property name="maxIdle" value="${server.redis.maxIdle}" />  
        <property name="testOnBorrow" value="${server.redis.testOnBorrow}" />  
        <property name="testOnReturn" value="true" />  
        <property name="testWhileIdle" value="true" />  
    </bean>  
    
     <bean id="sentinelConfiguration"  
        class="org.springframework.data.redis.connection.RedisSentinelConfiguration">  
        <property name="master">  
            <bean class="org.springframework.data.redis.connection.RedisNode">  
                <property name="name" value="${server.redis.sentinel.masterName}"></property>  
            </bean>  
        </property>  
        <property name="sentinels">  
            <set>  
                <bean class="org.springframework.data.redis.connection.RedisNode">  
                    <constructor-arg name="host"  
                        value="${server.redis.sentinel1.host}"></constructor-arg>  
                    <constructor-arg name="port"  
                        value="${server.redis.sentinel1.port}"></constructor-arg>  
                </bean>  
                <bean class="org.springframework.data.redis.connection.RedisNode">  
                    <constructor-arg name="host"  
                        value="${server.redis.sentinel2.host}"></constructor-arg>  
                    <constructor-arg name="port"  
                        value="${server.redis.sentinel2.port}"></constructor-arg>  
                </bean> 
                <bean class="org.springframework.data.redis.connection.RedisNode"> 
                	<constructor-arg name="host" value="${server.redis.sentinel3.host}"></constructor-arg>
                	<constructor-arg name="port" value="${server.redis.sentinel3.port}"></constructor-arg>
                </bean> 
            </set>  
        </property>  
    </bean> 
    
     <bean id="connectionFactory"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:password="${server.redis.sentinel.password}">  
        <constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>  
        <constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>  
    </bean>  
  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />  
    </bean>  
     
     <!-- jedis 单台机器-->
    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >-->
    <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
    <!--<property name="maxWaitMillis" value="${redis.maxWait}" />-->
    <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; redis服务器中心 &ndash;&gt;-->
    <!--<bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >-->
    <!--<property name="poolConfig" ref="poolConfig" />-->
    <!--<property name="port" value="${redis.port}" />-->
    <!--<property name="hostName" value="${redis.host}" />-->
    <!--&lt;!&ndash;<property name="password" value="${redis.password}" />&ndash;&gt;-->
    <!--<property name="timeout" value="${redis.timeout}" ></property>-->
    <!--<property name="database" value="1"></property>-->
    <!--</bean>-->

    <!--<bean id="commonRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >-->
    <!--<property name="connectionFactory" ref="connectionFactory" />-->
    <!--<property name="keySerializer" ref="stringRedisSerializer" />-->
    <!--<property name="hashKeySerializer" ref="stringRedisSerializer" />-->
    <!--<property name="valueSerializer" ref="stringRedisSerializer" />-->
    <!--<property name="hashValueSerializer" ref="stringRedisSerializer" />-->
    <!--</bean>-->

    <!--<bean id="connectionFactory1"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >-->
    <!--<property name="poolConfig" ref="poolConfig" />-->
    <!--<property name="port" value="${redis.port}" />-->
    <!--<property name="hostName" value="${redis.host}" />-->
    <!--&lt;!&ndash;<property name="password" value="${redis.password}" />&ndash;&gt;-->
    <!--<property name="timeout" value="${redis.timeout}" ></property>-->
    <!--<property name="database" value="2"></property>-->
    <!--</bean>-->

    <!--<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
    <!--<bean id="cacheRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >-->
    <!--<property name="connectionFactory" ref="connectionFactory1" />-->
    <!--<property name="keySerializer" ref="stringRedisSerializer" />-->
    <!--<property name="hashKeySerializer" ref="stringRedisSerializer" />-->
    <!--<property name="valueSerializer" ref="stringRedisSerializer" />-->
    <!--<property name="hashValueSerializer" ref="stringRedisSerializer" />-->
    <!--</bean>-->
</beans>